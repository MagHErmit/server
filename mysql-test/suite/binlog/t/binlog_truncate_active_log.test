# ==== Purpose ====
#
# Test verifies the truncation of single binary log file.
#
# ==== Implementation ====
#
# Steps:
#    0 - Create table t1 and insert/commit a row.
#    1 - Insert an another row such that it gets written to binlog but commit
#        in engine fails as server crashed at this point.
#    2 - Restart server with --rpl-semi-sync-slave-enabled=1
#    3 - Upon server start 'master-bin.000001' will be truncated to contain
#        only the first insert
#
# ==== References ====
#
# MDEV-21117: recovery for --rpl-semi-sync-slave-enabled server

--source include/have_innodb.inc
--source include/have_aria.inc
--source include/have_log_bin.inc
--source include/have_debug.inc
--source include/have_binlog_format_statement.inc

call mtr.add_suppression("Can.t init tc log");
call mtr.add_suppression("Aborting");

# The following cases are tested:
# A. 2pc transaction is followed by a blank "zero-engines" one
# B. 2pc transaction follows the blank one
# C. Similarly to A, with the XA blank transaction

--connection default
RESET MASTER;
CREATE TABLE t  ( f INT )  ENGINE=INNODB;
CREATE TABLE t2  ( f INT ) ENGINE=INNODB;
CREATE TABLE tm ( f INT ) ENGINE=Aria;

--echo # Case A.
# Both are doomed into truncation.
--let $this_search_pattern = Successfully truncated.*to remove transactions starting from GTID 0-1-6
--let $query1 = INSERT INTO t VALUES (20)
--let $query2 = DELETE FROM t2 WHERE f = 666 /* no such record */
--source binlog_truncate_active_log.inc

--echo # Case B.
# The inverted sequence ends up to truncate only $query2
--let $this_search_pattern = Successfully truncated.*to remove transactions starting from GTID 0-1-10
--let $query1 = DELETE FROM t2 WHERE f = 0
--let $query2 = INSERT INTO t VALUES (20)
--source binlog_truncate_active_log.inc


delimiter |;
CREATE PROCEDURE sp_blank_xa()
BEGIN
 XA START   'blank';
 DELETE FROM t2 WHERE f = 666 /* no such record */;
 XA END     'blank';
 XA PREPARE 'blank';
END|
delimiter ;|


--echo # Case C.
--let $this_search_pattern = Successfully truncated.*to remove transactions starting from GTID 0-1-13
--let $query1 = INSERT INTO t VALUES (20)
--let $pre_q2 = CALL sp_blank_xa
--let $query2 =  XA COMMIT  'blank'
--source binlog_truncate_active_log.inc
DROP PROCEDURE sp_blank_xa;

--echo # Cleanup
DROP TABLE t,t2,tm;

--echo # End of the tests
